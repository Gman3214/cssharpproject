<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pi_audio.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>